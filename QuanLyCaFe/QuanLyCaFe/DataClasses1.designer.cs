#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyCaFe
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLCF")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertBill(HoaDon instance);
    partial void UpdateBill(HoaDon instance);
    partial void DeleteBill(HoaDon instance);
    partial void InsertFood(Food instance);
    partial void UpdateFood(Food instance);
    partial void DeleteFood(Food instance);
    partial void InsertFoodCategory(FoodCategory instance);
    partial void UpdateFoodCategory(FoodCategory instance);
    partial void DeleteFoodCategory(FoodCategory instance);
    partial void InsertTableFood(TableFood instance);
    partial void UpdateTableFood(TableFood instance);
    partial void DeleteTableFood(TableFood instance);
    partial void InsertThongTinBill(ThongTinBill instance);
    partial void UpdateThongTinBill(ThongTinBill instance);
    partial void DeleteThongTinBill(ThongTinBill instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::QuanLyCaFe.Properties.Settings.Default.QLCFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> Bills
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<Food> Foods
		{
			get
			{
				return this.GetTable<Food>();
			}
		}
		
		public System.Data.Linq.Table<FoodCategory> FoodCategories
		{
			get
			{
				return this.GetTable<FoodCategory>();
			}
		}
		
		public System.Data.Linq.Table<TableFood> TableFoods
		{
			get
			{
				return this.GetTable<TableFood>();
			}
		}
		
		public System.Data.Linq.Table<ThongTinBill> ThongTinBills
		{
			get
			{
				return this.GetTable<ThongTinBill>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenhienthi;
		
		private string _username;
		
		private string _password1;
		
		private int _loaitaikhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenhienthiChanging(string value);
    partial void OntenhienthiChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onpassword1Changing(string value);
    partial void Onpassword1Changed();
    partial void OnloaitaikhoanChanging(int value);
    partial void OnloaitaikhoanChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenhienthi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenhienthi
		{
			get
			{
				return this._tenhienthi;
			}
			set
			{
				if ((this._tenhienthi != value))
				{
					this.OntenhienthiChanging(value);
					this.SendPropertyChanging();
					this._tenhienthi = value;
					this.SendPropertyChanged("tenhienthi");
					this.OntenhienthiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string password1
		{
			get
			{
				return this._password1;
			}
			set
			{
				if ((this._password1 != value))
				{
					this.Onpassword1Changing(value);
					this.SendPropertyChanging();
					this._password1 = value;
					this.SendPropertyChanged("password1");
					this.Onpassword1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaitaikhoan", DbType="Int NOT NULL")]
		public int loaitaikhoan
		{
			get
			{
				return this._loaitaikhoan;
			}
			set
			{
				if ((this._loaitaikhoan != value))
				{
					this.OnloaitaikhoanChanging(value);
					this.SendPropertyChanging();
					this._loaitaikhoan = value;
					this.SendPropertyChanged("loaitaikhoan");
					this.OnloaitaikhoanChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _ngayvao;
		
		private int _idBan;
		
		private int _trangthai;
		
		private EntitySet<ThongTinBill> _ThongTinBills;
		
		private EntityRef<TableFood> _TableFood;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnngayvaoChanging(System.DateTime value);
    partial void OnngayvaoChanged();
    partial void OnidBanChanging(int value);
    partial void OnidBanChanged();
    partial void OntrangthaiChanging(int value);
    partial void OntrangthaiChanged();
    #endregion
		
		public HoaDon()
		{
			this._ThongTinBills = new EntitySet<ThongTinBill>(new Action<ThongTinBill>(this.attach_ThongTinBills), new Action<ThongTinBill>(this.detach_ThongTinBills));
			this._TableFood = default(EntityRef<TableFood>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayvao", DbType="DateTime2 NOT NULL")]
		public System.DateTime ngayvao
		{
			get
			{
				return this._ngayvao;
			}
			set
			{
				if ((this._ngayvao != value))
				{
					this.OnngayvaoChanging(value);
					this.SendPropertyChanging();
					this._ngayvao = value;
					this.SendPropertyChanged("ngayvao");
					this.OnngayvaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBan", DbType="Int NOT NULL")]
		public int idBan
		{
			get
			{
				return this._idBan;
			}
			set
			{
				if ((this._idBan != value))
				{
					if (this._TableFood.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBanChanging(value);
					this.SendPropertyChanging();
					this._idBan = value;
					this.SendPropertyChanged("idBan");
					this.OnidBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", DbType="Int NOT NULL")]
		public int trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_ThongTinBill", Storage="_ThongTinBills", ThisKey="id", OtherKey="idBill")]
		public EntitySet<ThongTinBill> ThongTinBills
		{
			get
			{
				return this._ThongTinBills;
			}
			set
			{
				this._ThongTinBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableFood_Bill", Storage="_TableFood", ThisKey="idBan", OtherKey="id", IsForeignKey=true)]
		public TableFood TableFood
		{
			get
			{
				return this._TableFood.Entity;
			}
			set
			{
				TableFood previousValue = this._TableFood.Entity;
				if (((previousValue != value) 
							|| (this._TableFood.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableFood.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._TableFood.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._idBan = value.id;
					}
					else
					{
						this._idBan = default(int);
					}
					this.SendPropertyChanged("TableFood");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThongTinBills(ThongTinBill entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_ThongTinBills(ThongTinBill entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Food")]
	public partial class Food : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenmon;
		
		private int _idCategory;
		
		private decimal _dongia;
		
		private EntitySet<ThongTinBill> _ThongTinBills;
		
		private EntityRef<FoodCategory> _FoodCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenmonChanging(string value);
    partial void OntenmonChanged();
    partial void OnidCategoryChanging(int value);
    partial void OnidCategoryChanged();
    partial void OndongiaChanging(decimal value);
    partial void OndongiaChanged();
    #endregion
		
		public Food()
		{
			this._ThongTinBills = new EntitySet<ThongTinBill>(new Action<ThongTinBill>(this.attach_ThongTinBills), new Action<ThongTinBill>(this.detach_ThongTinBills));
			this._FoodCategory = default(EntityRef<FoodCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenmon", DbType="NVarChar(100)")]
		public string tenmon
		{
			get
			{
				return this._tenmon;
			}
			set
			{
				if ((this._tenmon != value))
				{
					this.OntenmonChanging(value);
					this.SendPropertyChanging();
					this._tenmon = value;
					this.SendPropertyChanged("tenmon");
					this.OntenmonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategory", DbType="Int NOT NULL")]
		public int idCategory
		{
			get
			{
				return this._idCategory;
			}
			set
			{
				if ((this._idCategory != value))
				{
					if (this._FoodCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCategoryChanging(value);
					this.SendPropertyChanging();
					this._idCategory = value;
					this.SendPropertyChanged("idCategory");
					this.OnidCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dongia", DbType="Decimal(18,0) NOT NULL")]
		public decimal dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_ThongTinBill", Storage="_ThongTinBills", ThisKey="id", OtherKey="idMon")]
		public EntitySet<ThongTinBill> ThongTinBills
		{
			get
			{
				return this._ThongTinBills;
			}
			set
			{
				this._ThongTinBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodCategory_Food", Storage="_FoodCategory", ThisKey="idCategory", OtherKey="id", IsForeignKey=true)]
		public FoodCategory FoodCategory
		{
			get
			{
				return this._FoodCategory.Entity;
			}
			set
			{
				FoodCategory previousValue = this._FoodCategory.Entity;
				if (((previousValue != value) 
							|| (this._FoodCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FoodCategory.Entity = null;
						previousValue.Foods.Remove(this);
					}
					this._FoodCategory.Entity = value;
					if ((value != null))
					{
						value.Foods.Add(this);
						this._idCategory = value.id;
					}
					else
					{
						this._idCategory = default(int);
					}
					this.SendPropertyChanged("FoodCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThongTinBills(ThongTinBill entity)
		{
			this.SendPropertyChanging();
			entity.Food = this;
		}
		
		private void detach_ThongTinBills(ThongTinBill entity)
		{
			this.SendPropertyChanging();
			entity.Food = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FoodCategory")]
	public partial class FoodCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ten;
		
		private EntitySet<Food> _Foods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenChanging(string value);
    partial void OntenChanged();
    #endregion
		
		public FoodCategory()
		{
			this._Foods = new EntitySet<Food>(new Action<Food>(this.attach_Foods), new Action<Food>(this.detach_Foods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ten", DbType="NVarChar(100)")]
		public string ten
		{
			get
			{
				return this._ten;
			}
			set
			{
				if ((this._ten != value))
				{
					this.OntenChanging(value);
					this.SendPropertyChanging();
					this._ten = value;
					this.SendPropertyChanged("ten");
					this.OntenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodCategory_Food", Storage="_Foods", ThisKey="id", OtherKey="idCategory")]
		public EntitySet<Food> Foods
		{
			get
			{
				return this._Foods;
			}
			set
			{
				this._Foods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Foods(Food entity)
		{
			this.SendPropertyChanging();
			entity.FoodCategory = this;
		}
		
		private void detach_Foods(Food entity)
		{
			this.SendPropertyChanging();
			entity.FoodCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableFood")]
	public partial class TableFood : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenban;
		
		private string _trangthai;
		
		private EntitySet<HoaDon> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenbanChanging(string value);
    partial void OntenbanChanged();
    partial void OntrangthaiChanging(string value);
    partial void OntrangthaiChanged();
    #endregion
		
		public TableFood()
		{
			this._Bills = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_Bills), new Action<HoaDon>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenban", DbType="NVarChar(100)")]
		public string tenban
		{
			get
			{
				return this._tenban;
			}
			set
			{
				if ((this._tenban != value))
				{
					this.OntenbanChanging(value);
					this.SendPropertyChanging();
					this._tenban = value;
					this.SendPropertyChanged("tenban");
					this.OntenbanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", DbType="NVarChar(100)")]
		public string trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableFood_Bill", Storage="_Bills", ThisKey="id", OtherKey="idBan")]
		public EntitySet<HoaDon> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.TableFood = this;
		}
		
		private void detach_Bills(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.TableFood = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongTinBill")]
	public partial class ThongTinBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idBill;
		
		private int _idMon;
		
		private int _count;
		
		private EntityRef<HoaDon> _Bill;
		
		private EntityRef<Food> _Food;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidBillChanging(int value);
    partial void OnidBillChanged();
    partial void OnidMonChanging(int value);
    partial void OnidMonChanged();
    partial void OncountChanging(int value);
    partial void OncountChanged();
    #endregion
		
		public ThongTinBill()
		{
			this._Bill = default(EntityRef<HoaDon>);
			this._Food = default(EntityRef<Food>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBill", DbType="Int NOT NULL")]
		public int idBill
		{
			get
			{
				return this._idBill;
			}
			set
			{
				if ((this._idBill != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBillChanging(value);
					this.SendPropertyChanging();
					this._idBill = value;
					this.SendPropertyChanged("idBill");
					this.OnidBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMon", DbType="Int NOT NULL")]
		public int idMon
		{
			get
			{
				return this._idMon;
			}
			set
			{
				if ((this._idMon != value))
				{
					if (this._Food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMonChanging(value);
					this.SendPropertyChanging();
					this._idMon = value;
					this.SendPropertyChanged("idMon");
					this.OnidMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_ThongTinBill", Storage="_Bill", ThisKey="idBill", OtherKey="id", IsForeignKey=true)]
		public HoaDon Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				HoaDon previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.ThongTinBills.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.ThongTinBills.Add(this);
						this._idBill = value.id;
					}
					else
					{
						this._idBill = default(int);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_ThongTinBill", Storage="_Food", ThisKey="idMon", OtherKey="id", IsForeignKey=true)]
		public Food Food
		{
			get
			{
				return this._Food.Entity;
			}
			set
			{
				Food previousValue = this._Food.Entity;
				if (((previousValue != value) 
							|| (this._Food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food.Entity = null;
						previousValue.ThongTinBills.Remove(this);
					}
					this._Food.Entity = value;
					if ((value != null))
					{
						value.ThongTinBills.Add(this);
						this._idMon = value.id;
					}
					else
					{
						this._idMon = default(int);
					}
					this.SendPropertyChanged("Food");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
